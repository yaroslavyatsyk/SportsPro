@model SportsPro.Models.Customer

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Customer</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="CustomerId" />
            <div class="form-group">
                <label asp-for="FirstName" class="control-label">First Name</label>
                <input asp-for="FirstName" class="form-control" />
                <span asp-validation-for="FirstName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="LastName" class="control-label">Last Name</label>
                <input asp-for="LastName" class="form-control" />
                <span asp-validation-for="LastName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="City" class="control-label"></label>
                <input asp-for="City" class="form-control" />
                <span asp-validation-for="City" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="State" class="control-label"></label>
                <select asp-for="State" class="form-control"></select>
                <span asp-validation-for="State" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="PostalCode" class="control-label">Postal Code</label>
                <input asp-for="PostalCode" class="form-control" />
                <span asp-validation-for="PostalCode" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Country" class="control-label"></label>
                <select asp-for="Country" class="form-control">
                    @foreach (string country in ViewBag.Countries)
                    {
                        <option value="@country">@country</option>
                    }
                </select>
            </div>
            <div class="form-group">
                <label asp-for="Email" class="control-label"></label>
                <input asp-for="Email" class="form-control" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Phone" class="control-label"></label>
                <input asp-for="Phone" class="form-control" />
                <span asp-validation-for="Phone" class="text-danger"></span>
            </div>
            <br />
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
                <a class="btn btn-info" asp-action="Index">Back to List</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        $(document).ready(function () {
            // Get the country and state dropdown elements
            var countryDropdown = $('#Country');
            var stateDropdown = $('#State');

            // Define the states for Canada

            var provinces = ['Alberta',
                'British Columbia',
                'Manitoba',
                'New Brunswick',
                'Newfoundland and Labrador',
                'Nova Scotia',
                'Ontario',
                'Prince Edward Island',
                'Quebec',
                'Saskatchewan',
                'Northwest Territories',
                'Nunavut',
                'Yukon'
            ];

            // Event handler for country dropdown change
            countryDropdown.change(function () {
                var selectedCountry = countryDropdown.val();
                updateStateDropdown(selectedCountry);
            });

            // Function to update the state dropdown based on the selected country
            function updateStateDropdown(selectedCountry) {
                // Clear the current options
                stateDropdown.empty();

                // Check if the selected country is Canada
                if (selectedCountry === 'Canada') {
                    // Add the provinces of Canada to the state dropdown
                    $.each(provinces, function (index, province) {
                        stateDropdown.append($('<option>', {
                            value: province,
                            text: province
                        }));
                    });
                } else {
                    // Handle other countries here
                    // Add code to fetch and populate states for other countries if needed


                }
            }

            // Initial setup based on the selected country
            var initialCountry = countryDropdown.val();
            updateStateDropdown(initialCountry);
        });
    </script>
}
